name: Run MacOS

on:
  workflow_dispatch:
    inputs:
      terminal_session:
        type: choice
        description: Choose terminal session
        default: 'upterm'
        options:
        - tmate
        - upterm
        - none
      install_macports_mode:
        type: choice
        description: Build or fetch binary Macports
        default: 'fetch'
        options:
        - build
        - fetch
      install_macports:
        description: 'Install MacPorts'
        required: false
        type: boolean
      macports_dev:
        description: 'Development version'
        required: false
        type: boolean
      macports_packages:
        description: 'Install MacPorts Packages'
        required: false
        type: string


env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release


jobs:
  build-macos:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: macos-12
    steps:
    - uses: actions/checkout@v3

    - name: Prepare environment
      run: |
           mkdir ~/artifacts || echo "~/artifacts already created"
           echo ":: Terminal session : ${{ inputs.terminal_session }} ::"

    - name: Fetch MacPorts
      if: ${{ inputs.install_macports_mode == 'fetch' }}
      run: |
           echo ":: Fetchinng MacPorts ::"
           cd ~/Downloads
           wget -q https://freeshell.de/arturwro/downloads/macports-bin.tar.gz
           sudo tar -xzf macports-bin.tar.gz -C /


    - name: Build MacPorts
      if: ${{ inputs.install_macports_mode == 'build' }}
      run: |
           mkdir -p ~/mports
           cd ~/mports
           git clone https://github.com/macports/macports-base.git
           cd macports-base
           git checkout v2.8.0  # skip this if you want to use the development version
           cd ~/mports/macports-base
           ./configure --enable-readline
           make
           sudo make install
           make distclean

    - name: Install MacPorts
      if: ${{ inputs.install_macports }}
      run: |
           sudo /opt/local/port selfupdate
           echo ":: Set variables ::"
           echo "/opt/local/bin" >> $GITHUB_PATH
           echo "/opt/local/sbin" >> $GITHUB_PATH

    - name: Install MacPorts Packages
      if: ${{ inputs.install_macports }}
      run: |
           PACKAGES=${{ inputs.macports_packages }}
           if [ ! -z PACKAGES ]
             OPTS="install"
             then
             for pkg in ${PACKAGES}
               do
               OPTS="$OPTS $pkg"
               done
             port $OPTS
           else
             echo ":: No packages to install ::"
           fi

    - name: Setup tmate session
      uses: mxschmitt/action-tmate@v3
      if: ${{ inputs.terminal_session == 'tmate' }}
      with:
          limit-access-to-actor: true
          #install-dependencies: false
      timeout-minutes: 60

    - name: Setup upterm session
      uses: lhotari/action-upterm@v1
      if: ${{ inputs.terminal_session == 'upterm' }}
      with:
        ## limits ssh access and adds the ssh public key for the user which triggered the workflow
        limit-access-to-actor: true

    - name: Prepare to upload MacPorts
      if: ${{ inputs.install_macports_mode == 'build' }}
      run: |
           mkdir ~/macports-bin
           [[ -x /opt/local ]] && tar -czf ~/macports-bin/macports-bin.tar.gz /opt/local/

    - name: Upload MacPorts
      if: ${{ inputs.install_macports_mode == 'build' }}
      uses: actions/upload-artifact@v3.0.0
      with:
        name: macports-bin
        path: ~/macports-bin/

    - name: Upload files
      uses: actions/upload-artifact@v3.0.0
      with:
        name: interactiveWorkflowFiles
        path: ~/artifacts/



